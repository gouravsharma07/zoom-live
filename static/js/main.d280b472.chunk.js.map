{"version":3,"sources":["components/FormComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","values","ZOOM_MEETING_SDK_KEY","ZOOM_MEETING_SDK_SECRET","meetingNumber","role","signature","FormComponent","sdkKey","passWord","password","useState","userName","setUserName","userEmail","setUserEmail","userNameError","setUserNameError","userEmailError","setUserEmailError","getSignature","document","getElementById","style","display","init","leaveUrl","success","console","log","join","tk","zak","error","className","onSubmit","event","preventDefault","isUserNameValid","length","test","isUserEmailValid","includes","type","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+RAIAA,UAAQC,aAAa,oCAAqC,OAE1DD,UAAQE,cACRF,UAAQG,gBAER,IAAMC,EAAS,CACbC,qBAAuB,yBACvBC,wBAA0B,mCAC1BC,cAAe,YACfC,KAAO,EACPC,UAAY,+RAoHCC,EAjHO,WACpB,IAAIC,EAASP,EAAOC,qBAChBE,EAAgBH,EAAOG,cACvBK,EAAWR,EAAOS,SAHI,MAuCMC,mBAAS,IAvCf,mBAuCnBC,EAvCmB,KAuCTC,EAvCS,OAwCQF,mBAAS,IAxCjB,mBAwCnBG,EAxCmB,KAwCRC,EAxCQ,OAyCgBJ,mBAAS,IAzCzB,mBAyCnBK,EAzCmB,KAyCJC,EAzCI,OA0CkBN,mBAAS,IA1C3B,mBA0CnBO,EA1CmB,KA0CHC,EA1CG,KAsEpBC,EAAe,WA9DrB,IAAsBd,IA+DPL,EAAOK,UA9DpBe,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtD3B,UAAQ4B,KAAK,CACXC,SANW,wBAOXC,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZ9B,UAAQiC,KAAK,CACXxB,UAAWA,EACXE,OAAQA,EACRJ,cAAeA,EACfK,SAAUA,EACVG,SAAUA,EACVE,UAAWA,EACXiB,GAnBc,GAoBdC,IAnBO,GAoBPL,QAAS,SAACA,GACRC,QAAQC,IAAIF,EACb,EACDM,MAAO,SAACA,GACNL,QAAQC,IAAII,EACb,GAGJ,EACDA,MAAO,SAACA,GACNL,QAAQC,IAAII,EACb,GAoCJ,EAYD,OACE,qBAAKC,UAAU,iBAAf,SACE,uBAAMC,SAZW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EA/BF1B,EAAS2B,QAAU,IAAM,cAAcC,KAAK5B,IAC9CK,EAAiB,4EACV,IAETA,EAAiB,KACV,GA2BDwB,EAvBD3B,EAAU4B,SAAS,eAIxBvB,EAAkB,KACX,IAJLA,EAAkB,wCACX,GAuBLmB,GAAmBG,GACrBrB,GAEH,EAIG,UACE,sBAAKc,UAAU,kBAAf,UACE,8CACA,uBACES,KAAK,OACLT,UAAS,sBAAiBlB,EAAgB,cAAgB,IAC1D4B,MAAOhC,EACPiC,SA/BmB,SAACT,GAC5BvB,EAAYuB,EAAMU,OAAOF,MAC1B,IA+BQ5B,GAAiB,sBAAMkB,UAAU,gBAAhB,SAAiClB,OAErD,sBAAKkB,UAAU,kBAAf,UACE,+CACA,uBACES,KAAK,OACLT,UAAS,sBAAiBhB,EAAiB,cAAgB,IAC3D0B,MAAO9B,EACP+B,SArCoB,SAACT,GAC7BrB,EAAaqB,EAAMU,OAAOF,MAC3B,IAqCQ1B,GAAkB,sBAAMgB,UAAU,gBAAhB,SAAiChB,OAEtD,wBAAQyB,KAAK,SAAb,8BAIP,EChFcI,MAzBf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,+BAgBA,cAAC,EAAD,OAIL,EClCcc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,G","file":"static/js/main.d280b472.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './FormComponent.css'; // Import the CSS file for styling\r\nimport { ZoomMtg } from '@zoomus/websdk';\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.13.0/lib', '/av');\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\n\r\nconst values = {\r\n  ZOOM_MEETING_SDK_KEY : \"tvzGMbNTSqCcNGaAST4AlQ\",\r\n  ZOOM_MEETING_SDK_SECRET : \"SdR3KkTYV8wdTe5qbikWXTQ0wpdfcIza\",\r\n  meetingNumber: 89295397410,\r\n  role : 0,\r\n  signature : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZGtLZXkiOiJ0dnpHTWJOVFNxQ2NOR2FBU1Q0QWxRIiwibW4iOjg5Mjk1Mzk3NDEwLCJyb2xlIjowLCJpYXQiOjE2OTQxNTgxMDMsImV4cCI6MTY5NDE2NTMwMywiYXBwS2V5IjoidHZ6R01iTlRTcUNjTkdhQVNUNEFsUSIsInRva2VuRXhwIjoxNjk0MTY1MzAzfQ.BcwJ4lsxQ0gC_fVR3eTHW3F_T0XHQl2hv8IQhHv_dhw\"\r\n}\r\n\r\nconst FormComponent = () => {\r\n  var sdkKey = values.ZOOM_MEETING_SDK_KEY\r\n  var meetingNumber = values.meetingNumber;\r\n  var passWord = values.password;\r\n  var registrantToken = ''\r\n  var zakToken = ''\r\n  var leaveUrl = 'http://localhost:3000'\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementById('zmmtg-root').style.display = 'block'\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(success)\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          sdkKey: sdkKey,\r\n          meetingNumber: meetingNumber,\r\n          passWord: passWord,\r\n          userName: userName,\r\n          userEmail: userEmail,\r\n          tk: registrantToken,\r\n          zak: zakToken,\r\n          success: (success) => {\r\n            console.log(success)\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userNameError, setUserNameError] = useState('');\r\n  const [userEmailError, setUserEmailError] = useState('');\r\n\r\n  const validateUserName = () => {\r\n    if (userName.length <= 3 || !/^[a-zA-Z]+$/.test(userName)) {\r\n      setUserNameError('User name must be greater than 3 characters and contain only alphabets.');\r\n      return false;\r\n    }\r\n    setUserNameError('');\r\n    return true;\r\n  };\r\n\r\n  const validateUserEmail = () => {\r\n    if (!userEmail.includes('@gmail.com')) {\r\n      setUserEmailError('Please enter a valid Gmail address.');\r\n      return false;\r\n    }\r\n    setUserEmailError('');\r\n    return true;\r\n  };\r\n\r\n  const handleUserNameChange = (event) => {\r\n    setUserName(event.target.value);\r\n  };\r\n\r\n  const handleUserEmailChange = (event) => {\r\n    setUserEmail(event.target.value);\r\n  };\r\n\r\n  const getSignature = () => {\r\n    startMeeting(values.signature);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const isUserNameValid = validateUserName();\r\n    const isUserEmailValid = validateUserEmail();\r\n\r\n    if (isUserNameValid && isUserEmailValid) {\r\n      getSignature();\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>User Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`input-field ${userNameError ? 'input-error' : ''}`}\r\n            value={userName}\r\n            onChange={handleUserNameChange}\r\n          />\r\n          {userNameError && <span className=\"error-message\">{userNameError}</span>}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>User Email</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`input-field ${userEmailError ? 'input-error' : ''}`}\r\n            value={userEmail}\r\n            onChange={handleUserEmailChange}\r\n          />\r\n          {userEmailError && <span className=\"error-message\">{userEmailError}</span>}\r\n        </div>\r\n        <button type=\"submit\">Join Meeting</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n// import { ZoomMtg } from '@zoomus/websdk';\r\nimport FormComponent from './components/FormComponent';\r\n\r\n// ZoomMtg.setZoomJSLib('https://source.zoom.us/2.13.0/lib', '/av');\r\n\r\n// ZoomMtg.preLoadWasm();\r\n// ZoomMtg.prepareWebSDK();\r\n// // loads language files, also passes any error messages to the ui\r\n// ZoomMtg.i18n.load('en-US');\r\n// ZoomMtg.i18n.reload('en-US');\r\n\r\n// const values = {\r\n//   ZOOM_MEETING_SDK_KEY : \"sPWY_Qn6QVyB41ZsGjHH9Q\",\r\n//   ZOOM_MEETING_SDK_SECRET : \"eSDVyi8a7FpM5cMJvst1suZ1kowqsEaj\",\r\n//   meetingNumber: 87281097514,\r\n//   role : 0,\r\n//   signature : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZGtLZXkiOiJzUFdZX1FuNlFWeUI0MVpzR2pISDlRIiwibW4iOjg3MjgxMDk3NTE0LCJyb2xlIjowLCJpYXQiOjE2OTA0Mzg2NjYsImV4cCI6MTY5MDQ0NTg2NiwiYXBwS2V5Ijoic1BXWV9RbjZRVnlCNDFac0dqSEg5USIsInRva2VuRXhwIjoxNjkwNDQ1ODY2fQ.pHUblTzrLXFKVniVcGmySwuvuE1iX5e__9AyoeCrVlg\"\r\n// }\r\n\r\n// TESTING\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        {/* <h1>Zoom Meeting SDK Sample React</h1>\r\n        {/* <button onClick={getSignature}>Join Meeting</button> */}\r\n        {/* <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Username:</label>\r\n          <input type=\"text\" value={userName} onChange={handleUserNameChange} />\r\n          {userNameError && <span style={{ color: 'red' }}>{userNameError}</span>}\r\n        </div>\r\n        <div>\r\n          <label>Useremail:</label>\r\n          <input type=\"text\" value={userEmail} onChange={handleUserEmailChange} />\r\n          {userEmailError && <span style={{ color: 'red' }}>{userEmailError}</span>}\r\n        </div>\r\n        <button type=\"submit\">Join Meeting</button>\r\n      </form>  */}\r\n      <FormComponent/>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}